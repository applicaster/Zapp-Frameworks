apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

import org.gradle.util.VersionNumber

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 19
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def safeExtGet(prop, fallback) {
    def ver = rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    if (VersionNumber.parse(fallback) > VersionNumber.parse(ver)) {
        throw new Exception("Version mismatch for $prop: $ver found, at least $fallback required")
    }
    return ver
}

def applicasterSDKVersion = safeExtGet("applicaster_android_sdk_core_version", "8.3.8")

dependencies {
    // Check if an open SDK is defined - if not use the closed one.
    def devSDK = findProject(':applicaster-android-sdk')
    if (devSDK != null) {
        implementation project(':applicaster-android-sdk')
    } else {
        api "com.applicaster:applicaster-android-sdk:$applicasterSDKVersion"
    }

    implementation 'io.didomi.sdk:android:1.35.1'
}
