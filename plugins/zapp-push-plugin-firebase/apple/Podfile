# frozen_string_literal: true

platform :ios, '12.0'
install! 'cocoapods', :share_schemes_for_development_pods => true
project '../../../localProject/apple/FrameworksApp.xcodeproj'

install! 'cocoapods', deterministic_uuids: false

source 'https://cdn.cocoapods.org/'
source 'git@github.com:applicaster/CocoaPods.git'

pre_install do |_installer|
  # workaround for https://github.com/CocoaPods/CocoaPods/issues/3289
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end

target 'FrameworksApp' do
  supports_swift_versions '5.1'
  use_frameworks!

  pod 'ZappPushPluginFirebase', path: './ZappPushPluginFirebase.podspec', testspecs: ['UnitTests']
  pod 'ZappCore', path: '../../zapp-core/apple/ZappCore.podspec'
  pod 'QuickBrickXray', path: '../../quick-brick-xray/apple/QuickBrickXray.podspec'
  pod 'XrayLogger', path: '../../../node_modules/@applicaster/x-ray/apple/Xraylogger.podspec'
  pod 'Reporter', path: '../../../node_modules/@applicaster/x-ray/apple/Reporter.podspec'
  pod 'LoggerInfo', path: '../../../node_modules/@applicaster/x-ray/apple/LoggerInfo.podspec'

  target 'FrameworksAppTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
      config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
    end
  end
end
