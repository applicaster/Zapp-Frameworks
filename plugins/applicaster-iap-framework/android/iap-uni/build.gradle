apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

import org.gradle.util.VersionNumber

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testApplicationId "com.applicaster.inplayerdemo"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

def safeExtGet(prop, fallback) {
    def ver = rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    if (VersionNumber.parse(fallback) > VersionNumber.parse(ver)) {
        throw new Exception("Version mismatch for $prop: $ver found, at least $fallback required")
    }
    return ver
}

dependencies {

    // Applicaster SDK
    if (!findProject(':applicaster-android-sdk') || project.hasProperty('forceClosedDependencies')) {
        def sdkVersion = safeExtGet('applicaster_android_sdk_core_version', '6.3.0')
        api ("com.applicaster:applicaster-android-sdk-core:${sdkVersion}")
    }
    else {
        api project(':applicaster-android-sdk')
    }

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation project(':iap')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:core-ktx:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}