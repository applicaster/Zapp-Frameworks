import org.gradle.util.VersionNumber

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def safeExtVersionGet(prop, fallback) {
    def ver = rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    if (VersionNumber.parse(fallback) > VersionNumber.parse(ver)) {
        throw new Exception("Version mismatch for $prop: $ver found, at least $fallback required")
    }
    return ver
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 29)
    buildToolsVersion safeExtGet('buildToolsVersion', '29.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 19)
        targetSdkVersion safeExtGet('targetSdkVersion', 29)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

def kotlin_version = safeExtVersionGet('kotlin_version', '1.3.50')

//SDK Manager
buildscript {
    ext.kotlin_version = kotlin_version
    repositories {
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

dependencies {
    // Applicaster SDK
    def sdkVersion = safeExtVersionGet('applicaster_android_sdk_core_version', '8.2.0')
    def applicasterSDKPath = "com.applicaster:applicaster-android-sdk-core:$sdkVersion"
    // Check if an open SDK is defined - if not use the closed one.
    if (!findProject(':applicaster-android-sdk')) {
        // core is the same project as applicaster-android-sdk but uses a different flavor
        api (applicasterSDKPath) {
            exclude group: 'com.applicaster', module: 'react-native'
        }
    }
    else {
        api (project(':applicaster-android-sdk'))
    }

    implementation 'androidx.appcompat:appcompat:1.3.0'

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
